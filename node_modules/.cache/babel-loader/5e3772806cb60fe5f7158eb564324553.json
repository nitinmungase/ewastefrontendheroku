{"ast":null,"code":"import html2canvas from 'html2canvas';\nimport JsPDF from 'jspdf';\nimport ReactDOM from 'react-dom';\nconst fileType = {\n  PNG: 'image/png',\n  JPEG: 'image/jpeg',\n  PDF: 'application/pdf'\n};\nconst DEFAULT_PNG = {\n  fileName: 'component.png',\n  type: fileType.PNG,\n  html2CanvasOptions: {}\n};\nconst DEFAULT_JPEG = {\n  fileName: 'component.jpg',\n  type: fileType.JPEG,\n  html2CanvasOptions: {}\n};\nconst DEFAULT_PDF = {\n  fileName: 'component.pdf',\n  type: fileType.PDF,\n  html2CanvasOptions: {},\n  pdfOptions: {}\n};\n/**\n * @param  {string} uri\n * @param  {string} filename\n */\n\nconst saveAs = (uri, filename) => {\n  const link = document.createElement('a');\n\n  if (typeof link.download === 'string') {\n    link.href = uri;\n    link.download = filename;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  } else {\n    window.open(uri);\n  }\n};\n/**\n * @param  {React.RefObject} node\n * @param  {string} fileName\n * @param  {string} type\n * @param  {object} html2CanvasOptions={}\n */\n\n\nconst getPDF = (canvas, _ref) => {\n  let {\n    w,\n    h,\n    orientation,\n    unit = 'mm',\n    pdfFormat\n  } = _ref;\n  const width = w || canvas.width;\n  const height = h || canvas.height;\n  const o = orientation || width > height ? 'l' : 'p';\n  const format = pdfFormat || 'a4';\n  return new JsPDF(o, unit, format);\n};\n\nconst exportComponent = (node, _ref2) => {\n  let {\n    fileName,\n    type,\n    html2CanvasOptions,\n    pdfOptions\n  } = _ref2;\n\n  if (!node.current) {\n    throw new Error(\"'node' must be a RefObject\");\n  }\n\n  const element = ReactDOM.findDOMNode(node.current);\n  return html2canvas(element, {\n    scrollY: -window.scrollY,\n    useCORS: true,\n    ...html2CanvasOptions\n  }).then(canvas => {\n    if (type === fileType.PDF) {\n      const pdf = getPDF(canvas, pdfOptions);\n      pdf.addImage(canvas.toDataURL(fileType.PNG, 1.0), 'PNG', pdfOptions.x || 0, pdfOptions.y || 0, pdfOptions.w || canvas.width, pdfOptions.h || canvas.height);\n      pdf.save(fileName);\n    } else {\n      saveAs(canvas.toDataURL(type, 1.0), fileName);\n    }\n  });\n};\n/**\n * @param  {React.RefObject} node\n * @param  {string} fileName='component.png'\n * @param  {object} html2CanvasOptions={}\n */\n\n\nconst exportComponentAsPNG = function (node) {\n  let parameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return exportComponent(node, { ...DEFAULT_PNG,\n    ...parameters\n  });\n};\n/**\n * @param  {React.RefObject} node\n * @param  {string} fileName='component.jpeg'\n * @param  {string} type=fileType.JPEG\n * @param  {object} html2CanvasOptions={}\n */\n\n\nconst exportComponentAsJPEG = function (node) {\n  let parameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return exportComponent(node, { ...DEFAULT_JPEG,\n    ...parameters\n  });\n};\n/**\n * @param  {React.RefObject} node\n * @param  {string} fileName='component.pdf'\n * @param  {string} type=fileType.PDF\n * @param  {object} html2CanvasOptions={}\n * @param  {string} pdfOptions={}\n */\n\n\nconst exportComponentAsPDF = function (node) {\n  let parameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return exportComponent(node, { ...DEFAULT_PDF,\n    ...parameters\n  });\n};\n\nexport { exportComponentAsJPEG, exportComponentAsPDF, exportComponentAsPNG };","map":{"version":3,"names":["html2canvas","JsPDF","ReactDOM","fileType","PNG","JPEG","PDF","DEFAULT_PNG","fileName","type","html2CanvasOptions","DEFAULT_JPEG","DEFAULT_PDF","pdfOptions","saveAs","uri","filename","link","document","createElement","download","href","body","appendChild","click","removeChild","window","open","getPDF","canvas","w","h","orientation","unit","pdfFormat","width","height","o","format","exportComponent","node","current","Error","element","findDOMNode","scrollY","useCORS","then","pdf","addImage","toDataURL","x","y","save","exportComponentAsPNG","parameters","exportComponentAsJPEG","exportComponentAsPDF"],"sources":["C:/Users/Ni3/Desktop/C DAC/Project/React/ewaste-react/node_modules/react-component-export-image/index.js"],"sourcesContent":["import html2canvas from 'html2canvas';\nimport JsPDF from 'jspdf';\nimport ReactDOM from 'react-dom';\n\nconst fileType = {\n    PNG: 'image/png',\n    JPEG: 'image/jpeg',\n    PDF: 'application/pdf'\n};\n\nconst DEFAULT_PNG = {\n    fileName: 'component.png',\n    type: fileType.PNG,\n    html2CanvasOptions: {}\n};\n\nconst DEFAULT_JPEG = {\n    fileName:'component.jpg',\n    type: fileType.JPEG,\n    html2CanvasOptions: {}\n};\n\nconst DEFAULT_PDF = {\n    fileName: 'component.pdf',\n    type: fileType.PDF,\n    html2CanvasOptions: {}, \n    pdfOptions: {}\n};\n\n/**\n * @param  {string} uri\n * @param  {string} filename\n */\nconst saveAs = (uri, filename) => {\n    const link = document.createElement('a');\n\n    if (typeof link.download === 'string') {\n        link.href = uri;\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    } else {\n        window.open(uri);\n    }\n};\n\n/**\n * @param  {React.RefObject} node\n * @param  {string} fileName\n * @param  {string} type\n * @param  {object} html2CanvasOptions={}\n */\n\nconst getPDF = (canvas, {w, h, orientation, unit = 'mm', pdfFormat}) => {\n    const width = w || canvas.width\n    const height = h || canvas.height\n    const o = orientation || width > height ? 'l' : 'p'\n    const format = pdfFormat || 'a4'\n\n    return new JsPDF(o, unit, format)\n}\n\nconst exportComponent = (node, {\n    fileName, \n    type, \n    html2CanvasOptions, \n    pdfOptions\n}) => {\n    if(!node.current) {\n        throw new Error(\"'node' must be a RefObject\")\n    }\n\n    const element = ReactDOM.findDOMNode(node.current);\n    return html2canvas(element, {\n        scrollY: -window.scrollY,\n        useCORS: true,\n        ...html2CanvasOptions\n    }).then(canvas => {\n        if (type === fileType.PDF) {\n            const pdf = getPDF(canvas, pdfOptions)\n            pdf.addImage(\n                canvas.toDataURL(fileType.PNG, 1.0), \n                'PNG', \n                pdfOptions.x || 0, \n                pdfOptions.y || 0,\n                pdfOptions.w || canvas.width,\n                pdfOptions.h || canvas.height\n            );\n            pdf.save(fileName);\n        } else {\n            saveAs(canvas.toDataURL(type, 1.0), fileName);\n        }\n    });\n};\n\n/**\n * @param  {React.RefObject} node\n * @param  {string} fileName='component.png'\n * @param  {object} html2CanvasOptions={}\n */\nconst exportComponentAsPNG = (node, parameters = {}) => exportComponent(node, {...DEFAULT_PNG, ...parameters});\n\n/**\n * @param  {React.RefObject} node\n * @param  {string} fileName='component.jpeg'\n * @param  {string} type=fileType.JPEG\n * @param  {object} html2CanvasOptions={}\n */\nconst exportComponentAsJPEG = (node, parameters = {}) => exportComponent(node, {...DEFAULT_JPEG, ...parameters});\n\n/**\n * @param  {React.RefObject} node\n * @param  {string} fileName='component.pdf'\n * @param  {string} type=fileType.PDF\n * @param  {object} html2CanvasOptions={}\n * @param  {string} pdfOptions={}\n */\nconst exportComponentAsPDF = (node, parameters = {}) => exportComponent(node, {...DEFAULT_PDF, ...parameters});\n\nexport { \n    exportComponentAsJPEG,\n    exportComponentAsPDF,\n    exportComponentAsPNG\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}